{
    "Accordion": {
        "import {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\"\r\n\r\nexport default function AccordionDemo() {\r\n  return (\r\n    <Accordion type=\"single\" collapsible className=\"w-full\">\r\n      <AccordionItem value=\"item-1\">\r\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\r\n        <AccordionContent>\r\n          Yes. It adheres to the WAI-ARIA design pattern.\r\n        </AccordionContent>\r\n      </AccordionItem>\r\n      <AccordionItem value=\"item-2\">\r\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\r\n        <AccordionContent>\r\n          Yes. It comes with default styles that matches the other\r\n          components&apos; aesthetic.\r\n        </AccordionContent>\r\n      </AccordionItem>\r\n      <AccordionItem value=\"item-3\">\r\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\r\n        <AccordionContent>\r\n          Yes. It&apos;s animated by default, but you can disable it if you\r\n          prefer.\r\n        </AccordionContent>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  )\r\n}": [
            "Create an Accordion component using @shadcn/ui library",
            "Add AccordionItems to the Accordion with unique values",
            "For each AccordionItem, create an AccordionTrigger and AccordionContent",
            "Style the Accordion component using tailwindcss"
        ]
    },
    "Alert Dialog": {
        "import {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from \"@/components/ui/alert-dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function AlertDialogDemo() {\r\n  return (\r\n    <AlertDialog>\r\n      <AlertDialogTrigger asChild>\r\n        <Button variant=\"outline\">Show Dialog</Button>\r\n      </AlertDialogTrigger>\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\r\n          <AlertDialogDescription>\r\n            This action cannot be undone. This will permanently delete your\r\n            account and remove your data from our servers.\r\n          </AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n          <AlertDialogAction>Continue</AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  )\r\n}": [
            "Create a custom AlertDialog component using the @shadcn/ui library",
            "Implement the AlertDialogTrigger to show the dialog when a button is clicked",
            "Add AlertDialogHeader, AlertDialogTitle, and AlertDialogDescription to provide information about the action",
            "Add AlertDialogFooter with AlertDialogCancel and AlertDialogAction buttons to provide options to the user"
        ]
    },
    "Alert": {
        "import { Terminal, Waves } from \"lucide-react\"\r\n\r\nimport {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertTitle,\r\n} from \"@/components/ui/alert\"\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert>\r\n      <Terminal className=\"h-4 w-4\" />\r\n      <AlertTitle>Heads up!</AlertTitle>\r\n      <AlertDescription>\r\n        You can add components to your app using the cli.\r\n      </AlertDescription>\r\n    </Alert>\r\n  )\r\n}": [
            "Import the necessary components from the lucide-react and @shadcn/ui libraries.",
            "Create a functional component named 'AlertDemo'.",
            "Inside the 'AlertDemo' component, return an 'Alert' component from the @shadcn/ui library.",
            "Inside the 'Alert' component, include a 'Terminal' icon from lucide-react, an 'AlertTitle' and an 'AlertDescription' from the @shadcn/ui library."
        ],
        "import { AlertCircle, FileWarning, Terminal } from \"lucide-react\"\r\n\r\nimport {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertTitle,\r\n} from \"@/components/ui/alert\"\r\n\r\nexport default function AlertDestructive() {\r\n  return (\r\n    <Alert variant=\"destructive\">\r\n      <AlertCircle className=\"h-4 w-4\" />\r\n      <AlertTitle>Error</AlertTitle>\r\n      <AlertDescription>\r\n        Your session has expired. Please log in again.\r\n      </AlertDescription>\r\n    </Alert>\r\n  )\r\n}": [
            "Import necessary components and icons for the alert message",
            "Create a new Alert component with a 'destructive' variant",
            "Add an AlertCircle icon to the Alert component",
            "Add an AlertTitle and AlertDescription to the Alert component"
        ],
        "import {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from \"@/components/ui/alert-dialog\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function AlertDialogDemo() {\r\n  return (\r\n    <AlertDialog>\r\n      <AlertDialogTrigger asChild>\r\n        <Button variant=\"outline\">Show Dialog</Button>\r\n      </AlertDialogTrigger>\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\r\n          <AlertDialogDescription>\r\n            This action cannot be undone. This will permanently delete your\r\n            account and remove your data from our servers.\r\n          </AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n          <AlertDialogAction>Continue</AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  )\r\n}": [
            "Create a reusable alert dialog component using @shadcn/ui library.",
            "Implement a button that triggers the alert dialog.",
            "Add a header with a title and description to the alert dialog.",
            "Add a footer with cancel and continue actions to the alert dialog."
        ]
    },
    "Aspect Ratio": {
        "import Image from \"next/image\"\r\n\r\nimport { AspectRatio } from \"@/components/ui/aspect-ratio\"\r\n\r\nexport default function AspectRatioDemo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9} className=\"bg-muted\">\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  )\r\n}": [
            "Create a new AspectRatioDemo component using NextJS and @shadcn/ui library.",
            "Import the AspectRatio component from the @shadcn/ui library.",
            "Use the Image component from NextJS to display an image from a URL.",
            "Style the AspectRatio and Image components using Tailwind CSS classes."
        ]
    },
    "Avatar": {
        "import {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/components/ui/avatar\"\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <Avatar>\r\n      <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />\r\n      <AvatarFallback>CN</AvatarFallback>\r\n    </Avatar>\r\n  )\r\n}": [
            "Create a new Avatar component using the @shadcn/ui library",
            "Implement AvatarImage and AvatarFallback components as children of the Avatar component",
            "Use the AvatarImage component to display an image from a URL",
            "Use the AvatarFallback component to display initials when the image fails to load"
        ]
    },
    "Badge": {
        "import { Badge } from \"@/components/ui/badge\"\r\n\r\nexport default function BadgeDemo() {\r\n  return <Badge>Badge</Badge>\r\n}": [
            "Create a Badge component using @shadcn/ui library",
            "Export the Badge component as a default function",
            "Use the Badge component in a demo function",
            "Return the Badge component with 'Badge' as its child in the demo function"
        ],
        "import { Badge } from \"@/components/ui/badge\"\r\n\r\nexport default function BadgeDestructive() {\r\n  return <Badge variant=\"destructive\">Destructive</Badge>\r\n}": [
            "Create a new Badge component using the @shadcn/ui library.",
            "Set the variant of the Badge component to 'destructive'.",
            "Add the text 'Destructive' inside the Badge component.",
            "Export the BadgeDestructive function as a default export."
        ],
        "import { Badge } from \"@/components/ui/badge\"\r\n\r\nexport default function BadgeOutline() {\r\n  return <Badge variant=\"outline\">Outline</Badge>\r\n}": [
            "Create a new Badge component using the @shadcn/ui library",
            "Implement a variant of the Badge component with an outline style",
            "Export the BadgeOutline function as a default export from the module",
            "Render the Badge component with the text 'Outline' inside"
        ],
        "import { Badge } from \"@/components/ui/badge\"\r\n\r\nexport default function BadgeSecondary() {\r\n  return <Badge variant=\"secondary\">Secondary</Badge>\r\n}": [
            "Import the Badge component from the @shadcn/ui library.",
            "Create a new function component named 'BadgeSecondary'.",
            "In the 'BadgeSecondary' component, return a Badge component with the variant set to 'secondary'.",
            "Set the content of the Badge component to the string 'Secondary'."
        ]
    },
    "Button": {
        "import Link from \"next/link\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonAsChild() {\r\n  return (\r\n    <Button asChild>\r\n      <Link href=\"/login\">Login</Link>\r\n    </Button>\r\n  )\r\n}": [
            "Create a new Button component using the @shadcn/ui library",
            "Implement a Link component from NextJS to navigate to the login page",
            "Integrate the Link component inside the Button component",
            "Test the ButtonAsChild function to ensure it correctly renders the button with the link"
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonDemo() {\r\n  return <Button>Button</Button>\r\n}": [
            "Create a new Button component using the @shadcn/ui library.",
            "Test the Button component to ensure it renders correctly.",
            "Integrate the Button component into the ButtonDemo function.",
            "Ensure the ButtonDemo function correctly displays the Button component when called."
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonDestructive() {\r\n  return <Button variant=\"destructive\">Destructive</Button>\r\n}": [
            "Create a new Button component using the @shadcn/ui library",
            "Assign the 'destructive' variant to the Button component",
            "Render the Button component with the text 'Destructive'",
            "Export the ButtonDestructive component as the default export of the module"
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonGhost() {\r\n  return <Button variant=\"ghost\">Ghost</Button>\r\n}": [
            "Create a new ButtonGhost component that uses the Button component from the ui library",
            "Set the variant of the Button component to 'ghost'",
            "Add the text 'Ghost' inside the Button component",
            "Export the ButtonGhost component as the default export"
        ],
        "import { ChevronRight } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonIcon() {\r\n  return (\r\n    <Button variant=\"outline\" size=\"icon\">\r\n      <ChevronRight className=\"h-4 w-4\" />\r\n    </Button>\r\n  )\r\n}": [
            "Create a new ButtonIcon component.",
            "Import the ChevronRight icon from lucide-react library.",
            "Use the Button component from the project's UI components.",
            "Set the variant of the Button component to 'outline' and size to 'icon'."
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonLink() {\r\n  return <Button variant=\"link\">Link</Button>\r\n}": [
            "Create a ButtonLink component using the Button component from the @shadcn/ui library",
            "Set the variant of the Button to 'link'",
            "Add the text 'Link' inside the Button component",
            "Export the ButtonLink component as the default export of the module"
        ],
        "import { Loader2 } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonLoading() {\r\n  return (\r\n    <Button disabled>\r\n      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n      Please wait\r\n    </Button>\r\n  )\r\n}": [
            "Create a custom button component using the @shadcn/ui library.",
            "Integrate the 'lucide-react' library to use its Loader2 component.",
            "Implement a loading state for the button, which displays a spinning loader and a 'Please wait' message when the button is disabled.",
            "Style the loader and the button using tailwindcss classes."
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonOutline() {\r\n  return <Button variant=\"outline\">Outline</Button>\r\n}": [
            "Create a new Button component in the '/components/ui' directory",
            "Implement the Button component using the @shadcn/ui library",
            "Add a variant property to the Button component to allow different styles",
            "Create a ButtonOutline function that returns the Button component with the 'outline' variant"
        ],
        "import { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonSecondary() {\r\n  return <Button variant=\"secondary\">Secondary</Button>\r\n}": [
            "Create a new Button component using the @shadcn/ui library",
            "Set the variant of the Button component to 'secondary'",
            "Add text 'Secondary' to the Button component",
            "Export the ButtonSecondary function as the default export"
        ],
        "import { Mail } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport default function ButtonWithIcon() {\r\n  return (\r\n    <Button>\r\n      <Mail className=\"mr-2 h-4 w-4\" /> Login with Email\r\n    </Button>\r\n  )\r\n}": [
            "Create a new button component with an icon",
            "Integrate the 'lucide-react' library to use its 'Mail' icon",
            "Use the 'Button' component from the '@/components/ui/button' directory",
            "Style the 'Mail' icon and the button using Tailwind CSS"
        ]
    },
    "Calendar": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\n\r\nexport default function CalendarDemo() {\r\n  const [date, setDate] = React.useState<Date | undefined>(new Date())\r\n\r\n  return (\r\n    <Calendar\r\n      mode=\"single\"\r\n      selected={date}\r\n      onSelect={setDate}\r\n      className=\"rounded-md border\"\r\n    />\r\n  )\r\n}": [
            "Create a Calendar component using @shadcn/ui library",
            "Add state management to the Calendar component using React hooks",
            "Implement date selection functionality in the Calendar component",
            "Style the Calendar component using Tailwind CSS"
        ]
    },
    "Card": {
        "import { BellRing, Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\n\r\nconst notifications = [\r\n  {\r\n    title: \"Your call has been confirmed.\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"You have a new message!\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"Your subscription is expiring soon!\",\r\n    description: \"2 hours ago\",\r\n  },\r\n]\r\n\r\ntype CardProps = React.ComponentProps<typeof Card>\r\n\r\nexport default function CardDemo({ className, ...props }: CardProps) {\r\n  return (\r\n    <Card className={cn(\"w-[380px]\", className)} {...props}>\r\n      <CardHeader>\r\n        <CardTitle>Notifications</CardTitle>\r\n        <CardDescription>You have 3 unread messages.</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"grid gap-4\">\r\n        <div className=\" flex items-center space-x-4 rounded-md border p-4\">\r\n          <BellRing />\r\n          <div className=\"flex-1 space-y-1\">\r\n            <p className=\"text-sm font-medium leading-none\">\r\n              Push Notifications\r\n            </p>\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Send notifications to device.\r\n            </p>\r\n          </div>\r\n          <Switch />\r\n        </div>\r\n        <div>\r\n          {notifications.map((notification, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\r\n            >\r\n              <span className=\"flex h-2 w-2 translate-y-1 rounded-full bg-sky-500\" />\r\n              <div className=\"space-y-1\">\r\n                <p className=\"text-sm font-medium leading-none\">\r\n                  {notification.title}\r\n                </p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {notification.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <Button className=\"w-full\">\r\n          <Check className=\"mr-2 h-4 w-4\" /> Mark all as read\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}": [
            "Create a notifications card component using the Card component from the @shadcn/ui library.",
            "Implement a switch component to toggle push notifications.",
            "Display a list of notifications within the card, each with a title and description.",
            "Add a 'Mark all as read' button to the card footer."
        ],
        "import * as React from \"react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\n\r\nexport default function CardWithForm() {\r\n  return (\r\n    <Card className=\"w-[350px]\">\r\n      <CardHeader>\r\n        <CardTitle>Create project</CardTitle>\r\n        <CardDescription>Deploy your new project in one-click.</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form>\r\n          <div className=\"grid w-full items-center gap-4\">\r\n            <div className=\"flex flex-col space-y-1.5\">\r\n              <Label htmlFor=\"name\">Name</Label>\r\n              <Input id=\"name\" placeholder=\"Name of your project\" />\r\n            </div>\r\n            <div className=\"flex flex-col space-y-1.5\">\r\n              <Label htmlFor=\"framework\">Framework</Label>\r\n              <Select>\r\n                <SelectTrigger id=\"framework\">\r\n                  <SelectValue placeholder=\"Select\" />\r\n                </SelectTrigger>\r\n                <SelectContent position=\"popper\">\r\n                  <SelectItem value=\"next\">Next.js</SelectItem>\r\n                  <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>\r\n                  <SelectItem value=\"astro\">Astro</SelectItem>\r\n                  <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n      <CardFooter className=\"flex justify-between\">\r\n        <Button variant=\"outline\">Cancel</Button>\r\n        <Button>Deploy</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}": [
            "Create a Card component with a form using @shadcn/ui library.",
            "Design the form to include fields for 'Name' and 'Framework'.",
            "Use the Select component from @shadcn/ui library to create a dropdown for 'Framework' field.",
            "Add 'Cancel' and 'Deploy' buttons to the CardFooter."
        ]
    },
    "Checkbox": {
        "\"use client\"\r\n\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Checkbox id=\"terms\" />\r\n      <label\r\n        htmlFor=\"terms\"\r\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n      >\r\n        Accept terms and conditions\r\n      </label>\r\n    </div>\r\n  )\r\n}": [
            "Create a CheckboxDemo component using NextJS",
            "Import and use the Checkbox component from the @shadcn/ui library",
            "Style the CheckboxDemo component using tailwindcss",
            "Add functionality to disable the checkbox and change its appearance when disabled"
        ],
        "import { Checkbox } from \"@/components/ui/checkbox\"\r\n\r\nexport default function CheckboxDisabled() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Checkbox id=\"terms2\" disabled />\r\n      <label\r\n        htmlFor=\"terms2\"\r\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n      >\r\n        Accept terms and conditions\r\n      </label>\r\n    </div>\r\n  )\r\n}": [
            "Create a Checkbox component using @shadcn/ui library",
            "Add a label for the Checkbox component",
            "Style the Checkbox and label using tailwindcss",
            "Disable the Checkbox component"
        ],
        "\"use client\"\r\n\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\n\r\nexport default function CheckboxWithText() {\r\n  return (\r\n    <div className=\"items-top flex space-x-2\">\r\n      <Checkbox id=\"terms1\" />\r\n      <div className=\"grid gap-1.5 leading-none\">\r\n        <label\r\n          htmlFor=\"terms1\"\r\n          className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n        >\r\n          Accept terms and conditions\r\n        </label>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          You agree to our Terms of Service and Privacy Policy.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}": [
            "Create a new CheckboxWithText component",
            "Import the Checkbox component from the ui library",
            "Style the CheckboxWithText component using tailwindcss classes",
            "Add functionality to disable the checkbox when the peer is disabled"
        ]
    },
    "Collapsible": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronsUpDown, Plus, X } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Collapsible,\r\n  CollapsibleContent,\r\n  CollapsibleTrigger,\r\n} from \"@/components/ui/collapsible\"\r\n\r\nexport default function CollapsibleDemo() {\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n  return (\r\n    <Collapsible\r\n      open={isOpen}\r\n      onOpenChange={setIsOpen}\r\n      className=\"w-[350px] space-y-2\"\r\n    >\r\n      <div className=\"flex items-center justify-between space-x-4 px-4\">\r\n        <h4 className=\"text-sm font-semibold\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <CollapsibleTrigger asChild>\r\n          <Button variant=\"ghost\" size=\"sm\" className=\"w-9 p-0\">\r\n            <ChevronsUpDown className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Toggle</span>\r\n          </Button>\r\n        </CollapsibleTrigger>\r\n      </div>\r\n      <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n        @radix-ui/primitives\r\n      </div>\r\n      <CollapsibleContent className=\"space-y-2\">\r\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n          @radix-ui/colors\r\n        </div>\r\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n          @stitches/react\r\n        </div>\r\n      </CollapsibleContent>\r\n    </Collapsible>\r\n  )\r\n}": [
            "Create a collapsible component using the @shadcn/ui library",
            "Implement state management for the collapsible component using React hooks",
            "Style the collapsible component using Tailwind CSS",
            "Integrate the Lucide React library for icons within the collapsible component"
        ]
    },
    "Combobox": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Check, ChevronsUpDown } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n} from \"@/components/ui/command\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\nconst frameworks = [\r\n  {\r\n    value: \"next.js\",\r\n    label: \"Next.js\",\r\n  },\r\n  {\r\n    value: \"sveltekit\",\r\n    label: \"SvelteKit\",\r\n  },\r\n  {\r\n    value: \"nuxt.js\",\r\n    label: \"Nuxt.js\",\r\n  },\r\n  {\r\n    value: \"remix\",\r\n    label: \"Remix\",\r\n  },\r\n  {\r\n    value: \"astro\",\r\n    label: \"Astro\",\r\n  },\r\n]\r\n\r\nexport default function ComboboxDemo() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [value, setValue] = React.useState(\"\")\r\n\r\n  return (\r\n    <Popover open={open} onOpenChange={setOpen}>\r\n      <PopoverTrigger asChild>\r\n        <Button\r\n          variant=\"outline\"\r\n          role=\"combobox\"\r\n          aria-expanded={open}\r\n          className=\"w-[200px] justify-between\"\r\n        >\r\n          {value\r\n            ? frameworks.find((framework) => framework.value === value)?.label\r\n            : \"Select framework...\"}\r\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-[200px] p-0\">\r\n        <Command>\r\n          <CommandInput placeholder=\"Search framework...\" />\r\n          <CommandEmpty>No framework found.</CommandEmpty>\r\n          <CommandGroup>\r\n            {frameworks.map((framework) => (\r\n              <CommandItem\r\n                key={framework.value}\r\n                onSelect={(currentValue) => {\r\n                  setValue(currentValue === value ? \"\" : currentValue)\r\n                  setOpen(false)\r\n                }}\r\n              >\r\n                <Check\r\n                  className={cn(\r\n                    \"mr-2 h-4 w-4\",\r\n                    value === framework.value ? \"opacity-100\" : \"opacity-0\"\r\n                  )}\r\n                />\r\n                {framework.label}\r\n              </CommandItem>\r\n            ))}\r\n          </CommandGroup>\r\n        </Command>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}": [
            "Create a combobox component that allows the user to select a JavaScript framework from a list",
            "Implement a search functionality within the combobox that filters the list of frameworks based on the user's input",
            "Display a placeholder message when no frameworks match the user's search input",
            "Highlight the currently selected framework in the combobox list"
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Calendar, MoreHorizontal, Tags, Trash, User } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/components/ui/command\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nconst labels = [\r\n  \"feature\",\r\n  \"bug\",\r\n  \"enhancement\",\r\n  \"documentation\",\r\n  \"design\",\r\n  \"question\",\r\n  \"maintenance\",\r\n]\r\n\r\nexport default function ComboboxDropdownMenu() {\r\n  const [label, setLabel] = React.useState(\"feature\")\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-start justify-between rounded-md border px-4 py-3 sm:flex-row sm:items-center\">\r\n      <p className=\"text-sm font-medium leading-none\">\r\n        <span className=\"mr-2 rounded-lg bg-primary px-2 py-1 text-xs text-primary-foreground\">\r\n          {label}\r\n        </span>\r\n        <span className=\"text-muted-foreground\">Create a new project</span>\r\n      </p>\r\n      <DropdownMenu open={open} onOpenChange={setOpen}>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <MoreHorizontal />\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"end\" className=\"w-[200px]\">\r\n          <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n          <DropdownMenuGroup>\r\n            <DropdownMenuItem>\r\n              <User className=\"mr-2 h-4 w-4\" />\r\n              Assign to...\r\n            </DropdownMenuItem>\r\n            <DropdownMenuItem>\r\n              <Calendar className=\"mr-2 h-4 w-4\" />\r\n              Set due date...\r\n            </DropdownMenuItem>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuSub>\r\n              <DropdownMenuSubTrigger>\r\n                <Tags className=\"mr-2 h-4 w-4\" />\r\n                Apply label\r\n              </DropdownMenuSubTrigger>\r\n              <DropdownMenuSubContent className=\"p-0\">\r\n                <Command>\r\n                  <CommandInput\r\n                    placeholder=\"Filter label...\"\r\n                    autoFocus={true}\r\n                  />\r\n                  <CommandList>\r\n                    <CommandEmpty>No label found.</CommandEmpty>\r\n                    <CommandGroup>\r\n                      {labels.map((label) => (\r\n                        <CommandItem\r\n                          key={label}\r\n                          onSelect={(value) => {\r\n                            setLabel(value)\r\n                            setOpen(false)\r\n                          }}\r\n                        >\r\n                          {label}\r\n                        </CommandItem>\r\n                      ))}\r\n                    </CommandGroup>\r\n                  </CommandList>\r\n                </Command>\r\n              </DropdownMenuSubContent>\r\n            </DropdownMenuSub>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem className=\"text-red-600\">\r\n              <Trash className=\"mr-2 h-4 w-4\" />\r\n              Delete\r\n              <DropdownMenuShortcut>\u2318\u232b</DropdownMenuShortcut>\r\n            </DropdownMenuItem>\r\n          </DropdownMenuGroup>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    </div>\r\n  )\r\n}": [
            "Create a dropdown menu with various options such as 'Assign to...', 'Set due date...', 'Apply label', and 'Delete'",
            "Implement a feature to filter labels within the 'Apply label' submenu",
            "Add a button that triggers the dropdown menu",
            "Manage the state of the selected label and the open status of the dropdown menu"
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  ArrowUpCircle,\r\n  CheckCircle2,\r\n  Circle,\r\n  HelpCircle,\r\n  LucideIcon,\r\n  XCircle,\r\n} from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/components/ui/command\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\ntype Status = {\r\n  value: string\r\n  label: string\r\n  icon: LucideIcon\r\n}\r\n\r\nconst statuses: Status[] = [\r\n  {\r\n    value: \"backlog\",\r\n    label: \"Backlog\",\r\n    icon: HelpCircle,\r\n  },\r\n  {\r\n    value: \"todo\",\r\n    label: \"Todo\",\r\n    icon: Circle,\r\n  },\r\n  {\r\n    value: \"in progress\",\r\n    label: \"In Progress\",\r\n    icon: ArrowUpCircle,\r\n  },\r\n  {\r\n    value: \"done\",\r\n    label: \"Done\",\r\n    icon: CheckCircle2,\r\n  },\r\n  {\r\n    value: \"canceled\",\r\n    label: \"Canceled\",\r\n    icon: XCircle,\r\n  },\r\n]\r\n\r\nexport default function ComboboxPopover() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(\r\n    null\r\n  )\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-4\">\r\n      <p className=\"text-sm text-muted-foreground\">Status</p>\r\n      <Popover open={open} onOpenChange={setOpen}>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"w-[150px] justify-start\"\r\n          >\r\n            {selectedStatus ? (\r\n              <>\r\n                <selectedStatus.icon className=\"mr-2 h-4 w-4 shrink-0\" />\r\n                {selectedStatus.label}\r\n              </>\r\n            ) : (\r\n              <>+ Set status</>\r\n            )}\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"p-0\" side=\"right\" align=\"start\">\r\n          <Command>\r\n            <CommandInput placeholder=\"Change status...\" />\r\n            <CommandList>\r\n              <CommandEmpty>No results found.</CommandEmpty>\r\n              <CommandGroup>\r\n                {statuses.map((status) => (\r\n                  <CommandItem\r\n                    key={status.value}\r\n                    onSelect={(value) => {\r\n                      setSelectedStatus(\r\n                        statuses.find((priority) => priority.value === value) ||\r\n                          null\r\n                      )\r\n                      setOpen(false)\r\n                    }}\r\n                  >\r\n                    <status.icon\r\n                      className={cn(\r\n                        \"mr-2 h-4 w-4\",\r\n                        status.value === selectedStatus?.value\r\n                          ? \"opacity-100\"\r\n                          : \"opacity-40\"\r\n                      )}\r\n                    />\r\n                    <span>{status.label}</span>\r\n                  </CommandItem>\r\n                ))}\r\n              </CommandGroup>\r\n            </CommandList>\r\n          </Command>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}": [
            "Create a combobox popover component",
            "Implement a state to manage the open/close status of the popover",
            "Create a list of statuses with corresponding icons",
            "Implement a state to manage the selected status",
            "Render the selected status icon and label in the button triggering the popover",
            "Render a list of selectable statuses in the popover content",
            "Update the selected status when a status is selected from the list",
            "Close the popover when a status is selected"
        ]
    },
    "Command": {
        "import {\r\n  Calculator,\r\n  Calendar,\r\n  CreditCard,\r\n  Settings,\r\n  Smile,\r\n  User,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n  CommandSeparator,\r\n  CommandShortcut,\r\n} from \"@/components/ui/command\"\r\n\r\nexport default function CommandDemo() {\r\n  return (\r\n    <Command className=\"rounded-lg border shadow-md\">\r\n      <CommandInput placeholder=\"Type a command or search...\" />\r\n      <CommandList>\r\n        <CommandEmpty>No results found.</CommandEmpty>\r\n        <CommandGroup heading=\"Suggestions\">\r\n          <CommandItem>\r\n            <Calendar className=\"mr-2 h-4 w-4\" />\r\n            <span>Calendar</span>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Smile className=\"mr-2 h-4 w-4\" />\r\n            <span>Search Emoji</span>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Calculator className=\"mr-2 h-4 w-4\" />\r\n            <span>Calculator</span>\r\n          </CommandItem>\r\n        </CommandGroup>\r\n        <CommandSeparator />\r\n        <CommandGroup heading=\"Settings\">\r\n          <CommandItem>\r\n            <User className=\"mr-2 h-4 w-4\" />\r\n            <span>Profile</span>\r\n            <CommandShortcut>\u2318P</CommandShortcut>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <CreditCard className=\"mr-2 h-4 w-4\" />\r\n            <span>Billing</span>\r\n            <CommandShortcut>\u2318B</CommandShortcut>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Settings className=\"mr-2 h-4 w-4\" />\r\n            <span>Settings</span>\r\n            <CommandShortcut>\u2318S</CommandShortcut>\r\n          </CommandItem>\r\n        </CommandGroup>\r\n      </CommandList>\r\n    </Command>\r\n  )\r\n}": [
            "Create a command component with a search input field",
            "Implement a list of command suggestions with corresponding icons",
            "Add a separator in the command list",
            "Add a settings group of commands with shortcuts"
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  Calculator,\r\n  Calendar,\r\n  CreditCard,\r\n  Settings,\r\n  Smile,\r\n  User,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  CommandDialog,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n  CommandSeparator,\r\n  CommandShortcut,\r\n} from \"@/components/ui/command\"\r\n\r\nexport default function CommandDialogDemo() {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    const down = (e: KeyboardEvent) => {\r\n      if (e.key === \"j\" && (e.metaKey || e.ctrlKey)) {\r\n        e.preventDefault()\r\n        setOpen((open) => !open)\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", down)\r\n    return () => document.removeEventListener(\"keydown\", down)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <p className=\"text-sm text-muted-foreground\">\r\n        Press{\" \"}\r\n        <kbd className=\"pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100\">\r\n          <span className=\"text-xs\">\u2318</span>J\r\n        </kbd>\r\n      </p>\r\n      <CommandDialog open={open} onOpenChange={setOpen}>\r\n        <CommandInput placeholder=\"Type a command or search...\" />\r\n        <CommandList>\r\n          <CommandEmpty>No results found.</CommandEmpty>\r\n          <CommandGroup heading=\"Suggestions\">\r\n            <CommandItem>\r\n              <Calendar className=\"mr-2 h-4 w-4\" />\r\n              <span>Calendar</span>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Smile className=\"mr-2 h-4 w-4\" />\r\n              <span>Search Emoji</span>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Calculator className=\"mr-2 h-4 w-4\" />\r\n              <span>Calculator</span>\r\n            </CommandItem>\r\n          </CommandGroup>\r\n          <CommandSeparator />\r\n          <CommandGroup heading=\"Settings\">\r\n            <CommandItem>\r\n              <User className=\"mr-2 h-4 w-4\" />\r\n              <span>Profile</span>\r\n              <CommandShortcut>\u2318P</CommandShortcut>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <CreditCard className=\"mr-2 h-4 w-4\" />\r\n              <span>Billing</span>\r\n              <CommandShortcut>\u2318B</CommandShortcut>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Settings className=\"mr-2 h-4 w-4\" />\r\n              <span>Settings</span>\r\n              <CommandShortcut>\u2318S</CommandShortcut>\r\n            </CommandItem>\r\n          </CommandGroup>\r\n        </CommandList>\r\n      </CommandDialog>\r\n    </>\r\n  )\r\n}": [
            "Create a CommandDialogDemo component using React",
            "Implement keyboard shortcuts to open and close the command dialog",
            "Design the command dialog with CommandInput, CommandList, CommandGroup, and CommandItem components",
            "Integrate lucide-react icons into the command items"
        ]
    },
    "Context Menu": {
        "import {\r\n  ContextMenu,\r\n  ContextMenuCheckboxItem,\r\n  ContextMenuContent,\r\n  ContextMenuItem,\r\n  ContextMenuLabel,\r\n  ContextMenuRadioGroup,\r\n  ContextMenuRadioItem,\r\n  ContextMenuSeparator,\r\n  ContextMenuShortcut,\r\n  ContextMenuSub,\r\n  ContextMenuSubContent,\r\n  ContextMenuSubTrigger,\r\n  ContextMenuTrigger,\r\n} from \"@/components/ui/context-menu\"\r\n\r\nexport default function ContextMenuDemo() {\r\n  return (\r\n    <ContextMenu>\r\n      <ContextMenuTrigger className=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\r\n        Right click here\r\n      </ContextMenuTrigger>\r\n      <ContextMenuContent className=\"w-64\">\r\n        <ContextMenuItem inset>\r\n          Back\r\n          <ContextMenuShortcut>\u2318[</ContextMenuShortcut>\r\n        </ContextMenuItem>\r\n        <ContextMenuItem inset disabled>\r\n          Forward\r\n          <ContextMenuShortcut>\u2318]</ContextMenuShortcut>\r\n        </ContextMenuItem>\r\n        <ContextMenuItem inset>\r\n          Reload\r\n          <ContextMenuShortcut>\u2318R</ContextMenuShortcut>\r\n        </ContextMenuItem>\r\n        <ContextMenuSub>\r\n          <ContextMenuSubTrigger inset>More Tools</ContextMenuSubTrigger>\r\n          <ContextMenuSubContent className=\"w-48\">\r\n            <ContextMenuItem>\r\n              Save Page As...\r\n              <ContextMenuShortcut>\u21e7\u2318S</ContextMenuShortcut>\r\n            </ContextMenuItem>\r\n            <ContextMenuItem>Create Shortcut...</ContextMenuItem>\r\n            <ContextMenuItem>Name Window...</ContextMenuItem>\r\n            <ContextMenuSeparator />\r\n            <ContextMenuItem>Developer Tools</ContextMenuItem>\r\n          </ContextMenuSubContent>\r\n        </ContextMenuSub>\r\n        <ContextMenuSeparator />\r\n        <ContextMenuCheckboxItem checked>\r\n          Show Bookmarks Bar\r\n          <ContextMenuShortcut>\u2318\u21e7B</ContextMenuShortcut>\r\n        </ContextMenuCheckboxItem>\r\n        <ContextMenuCheckboxItem>Show Full URLs</ContextMenuCheckboxItem>\r\n        <ContextMenuSeparator />\r\n        <ContextMenuRadioGroup value=\"pedro\">\r\n          <ContextMenuLabel inset>People</ContextMenuLabel>\r\n          <ContextMenuSeparator />\r\n          <ContextMenuRadioItem value=\"pedro\">\r\n            Pedro Duarte\r\n          </ContextMenuRadioItem>\r\n          <ContextMenuRadioItem value=\"colm\">Colm Tuite</ContextMenuRadioItem>\r\n        </ContextMenuRadioGroup>\r\n      </ContextMenuContent>\r\n    </ContextMenu>\r\n  )\r\n}": [
            "Implement a ContextMenu component with various subcomponents like ContextMenuTrigger, ContextMenuContent, ContextMenuItem, etc.",
            "Create a demo of the ContextMenu component with various options such as 'Back', 'Forward', 'Reload', etc.",
            "Add keyboard shortcuts to the ContextMenu options using the ContextMenuShortcut component.",
            "Implement a sub-menu within the ContextMenu using the ContextMenuSub, ContextMenuSubTrigger, and ContextMenuSubContent components."
        ]
    },
    "Date Picker": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { format } from \"date-fns\"\r\nimport { Calendar as CalendarIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\nexport default function DatePickerDemo() {\r\n  const [date, setDate] = React.useState<Date>()\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button\r\n          variant={\"outline\"}\r\n          className={cn(\r\n            \"w-[280px] justify-start text-left font-normal\",\r\n            !date && \"text-muted-foreground\"\r\n          )}\r\n        >\r\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-auto p-0\">\r\n        <Calendar\r\n          mode=\"single\"\r\n          selected={date}\r\n          onSelect={setDate}\r\n          initialFocus\r\n        />\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}": [
            "Create a DatePicker component using the Popover component from the @shadcn/ui library.",
            "Implement a Button component that triggers the Popover when clicked.",
            "Use the Calendar component from the @shadcn/ui library to allow users to select a date.",
            "Store the selected date in a state variable and display it on the Button component."
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { addDays, format } from \"date-fns\"\r\nimport { Calendar as CalendarIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\n\r\nexport default function DatePickerWithPresets() {\r\n  const [date, setDate] = React.useState<Date>()\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button\r\n          variant={\"outline\"}\r\n          className={cn(\r\n            \"w-[280px] justify-start text-left font-normal\",\r\n            !date && \"text-muted-foreground\"\r\n          )}\r\n        >\r\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"flex w-auto flex-col space-y-2 p-2\">\r\n        <Select\r\n          onValueChange={(value) =>\r\n            setDate(addDays(new Date(), parseInt(value)))\r\n          }\r\n        >\r\n          <SelectTrigger>\r\n            <SelectValue placeholder=\"Select\" />\r\n          </SelectTrigger>\r\n          <SelectContent position=\"popper\">\r\n            <SelectItem value=\"0\">Today</SelectItem>\r\n            <SelectItem value=\"1\">Tomorrow</SelectItem>\r\n            <SelectItem value=\"3\">In 3 days</SelectItem>\r\n            <SelectItem value=\"7\">In a week</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <div className=\"rounded-md border\">\r\n          <Calendar mode=\"single\" selected={date} onSelect={setDate} />\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}": [
            "Implement a date picker component using the @shadcn/ui library.",
            "Add a popover component that triggers when the date picker button is clicked.",
            "Incorporate a select component within the popover to provide date options such as 'Today', 'Tomorrow', 'In 3 days', and 'In a week'.",
            "Style the components using tailwindcss for a consistent look and feel."
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { addDays, format } from \"date-fns\"\r\nimport { Calendar as CalendarIcon } from \"lucide-react\"\r\nimport { DateRange } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\nexport default function DatePickerWithRange({\r\n  className,\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  const [date, setDate] = React.useState<DateRange | undefined>({\r\n    from: new Date(2022, 0, 20),\r\n    to: addDays(new Date(2022, 0, 20), 20),\r\n  })\r\n\r\n  return (\r\n    <div className={cn(\"grid gap-2\", className)}>\r\n      <Popover>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            id=\"date\"\r\n            variant={\"outline\"}\r\n            className={cn(\r\n              \"w-[300px] justify-start text-left font-normal\",\r\n              !date && \"text-muted-foreground\"\r\n            )}\r\n          >\r\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n            {date?.from ? (\r\n              date.to ? (\r\n                <>\r\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\r\n                  {format(date.to, \"LLL dd, y\")}\r\n                </>\r\n              ) : (\r\n                format(date.from, \"LLL dd, y\")\r\n              )\r\n            ) : (\r\n              <span>Pick a date</span>\r\n            )}\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n          <Calendar\r\n            initialFocus\r\n            mode=\"range\"\r\n            defaultMonth={date?.from}\r\n            selected={date}\r\n            onSelect={setDate}\r\n            numberOfMonths={2}\r\n          />\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}": [
            "Create a date picker component with a range selection feature",
            "Implement a popover for the date picker component",
            "Integrate the date picker with the Calendar component",
            "Format the selected date range and display it on the button"
        ]
    },
    "Dialog": {
        "import { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function DialogDemo() {\r\n  return (\r\n    <Dialog>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\">Edit Profile</Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Edit profile</DialogTitle>\r\n          <DialogDescription>\r\n            Make changes to your profile here. Click save when you're done.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"name\" className=\"text-right\">\r\n              Name\r\n            </Label>\r\n            <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\r\n          </div>\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"username\" className=\"text-right\">\r\n              Username\r\n            </Label>\r\n            <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\r\n          </div>\r\n        </div>\r\n        <DialogFooter>\r\n          <Button type=\"submit\">Save changes</Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}": [
            "Create a Dialog component using the @shadcn/ui library",
            "Create a form within the Dialog component to edit user profile",
            "Style the form and Dialog component using tailwindcss",
            "Add a button to submit the form"
        ]
    },
    "Dropdown Menu": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { DropdownMenuCheckboxItemProps } from \"@radix-ui/react-dropdown-menu\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuContent,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\ntype Checked = DropdownMenuCheckboxItemProps[\"checked\"]\r\n\r\nexport default function DropdownMenuCheckboxes() {\r\n  const [showStatusBar, setShowStatusBar] = React.useState<Checked>(true)\r\n  const [showActivityBar, setShowActivityBar] = React.useState<Checked>(false)\r\n  const [showPanel, setShowPanel] = React.useState<Checked>(false)\r\n\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button variant=\"outline\">Open</Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent className=\"w-56\">\r\n        <DropdownMenuLabel>Appearance</DropdownMenuLabel>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuCheckboxItem\r\n          checked={showStatusBar}\r\n          onCheckedChange={setShowStatusBar}\r\n        >\r\n          Status Bar\r\n        </DropdownMenuCheckboxItem>\r\n        <DropdownMenuCheckboxItem\r\n          checked={showActivityBar}\r\n          onCheckedChange={setShowActivityBar}\r\n          disabled\r\n        >\r\n          Activity Bar\r\n        </DropdownMenuCheckboxItem>\r\n        <DropdownMenuCheckboxItem\r\n          checked={showPanel}\r\n          onCheckedChange={setShowPanel}\r\n        >\r\n          Panel\r\n        </DropdownMenuCheckboxItem>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  )\r\n}": [
            "Create a dropdown menu component using the @radix-ui/react-dropdown-menu library",
            "Implement state management for checkbox items in the dropdown menu using React's useState hook",
            "Style the dropdown menu component using tailwindcss",
            "Create a button component using the @shadcn/ui library and use it as a trigger for the dropdown menu"
        ],
        "import {\r\n  Cloud,\r\n  CreditCard,\r\n  Github,\r\n  Keyboard,\r\n  LifeBuoy,\r\n  LogOut,\r\n  Mail,\r\n  MessageSquare,\r\n  Plus,\r\n  PlusCircle,\r\n  Settings,\r\n  User,\r\n  UserPlus,\r\n  Users,\r\n} from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nexport default function DropdownMenuDemo() {\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button variant=\"outline\">Open</Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent className=\"w-56\">\r\n        <DropdownMenuLabel>My Account</DropdownMenuLabel>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuGroup>\r\n          <DropdownMenuItem>\r\n            <User className=\"mr-2 h-4 w-4\" />\r\n            <span>Profile</span>\r\n            <DropdownMenuShortcut>\u21e7\u2318P</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n          <DropdownMenuItem>\r\n            <CreditCard className=\"mr-2 h-4 w-4\" />\r\n            <span>Billing</span>\r\n            <DropdownMenuShortcut>\u2318B</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n          <DropdownMenuItem>\r\n            <Settings className=\"mr-2 h-4 w-4\" />\r\n            <span>Settings</span>\r\n            <DropdownMenuShortcut>\u2318S</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n          <DropdownMenuItem>\r\n            <Keyboard className=\"mr-2 h-4 w-4\" />\r\n            <span>Keyboard shortcuts</span>\r\n            <DropdownMenuShortcut>\u2318K</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n        </DropdownMenuGroup>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuGroup>\r\n          <DropdownMenuItem>\r\n            <Users className=\"mr-2 h-4 w-4\" />\r\n            <span>Team</span>\r\n          </DropdownMenuItem>\r\n          <DropdownMenuSub>\r\n            <DropdownMenuSubTrigger>\r\n              <UserPlus className=\"mr-2 h-4 w-4\" />\r\n              <span>Invite users</span>\r\n            </DropdownMenuSubTrigger>\r\n            <DropdownMenuPortal>\r\n              <DropdownMenuSubContent>\r\n                <DropdownMenuItem>\r\n                  <Mail className=\"mr-2 h-4 w-4\" />\r\n                  <span>Email</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem>\r\n                  <MessageSquare className=\"mr-2 h-4 w-4\" />\r\n                  <span>Message</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuSeparator />\r\n                <DropdownMenuItem>\r\n                  <PlusCircle className=\"mr-2 h-4 w-4\" />\r\n                  <span>More...</span>\r\n                </DropdownMenuItem>\r\n              </DropdownMenuSubContent>\r\n            </DropdownMenuPortal>\r\n          </DropdownMenuSub>\r\n          <DropdownMenuItem>\r\n            <Plus className=\"mr-2 h-4 w-4\" />\r\n            <span>New Team</span>\r\n            <DropdownMenuShortcut>\u2318+T</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n        </DropdownMenuGroup>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuItem>\r\n          <Github className=\"mr-2 h-4 w-4\" />\r\n          <span>GitHub</span>\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem>\r\n          <LifeBuoy className=\"mr-2 h-4 w-4\" />\r\n          <span>Support</span>\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem disabled>\r\n          <Cloud className=\"mr-2 h-4 w-4\" />\r\n          <span>API</span>\r\n        </DropdownMenuItem>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuItem>\r\n          <LogOut className=\"mr-2 h-4 w-4\" />\r\n          <span>Log out</span>\r\n          <DropdownMenuShortcut>\u21e7\u2318Q</DropdownMenuShortcut>\r\n        </DropdownMenuItem>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  )\r\n}": [
            "Create a dropdown menu component using the @shadcn/ui library",
            "Add icons to the dropdown menu items using the lucide-react library",
            "Create shortcut keys for the dropdown menu items",
            "Style the dropdown menu and its items using tailwindcss"
        ],
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { DropdownMenuCheckboxItemProps } from \"@radix-ui/react-dropdown-menu\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuContent,\r\n  DropdownMenuLabel,\r\n  DropdownMenuRadioGroup,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\n\r\nexport default function DropdownMenuRadioGroupDemo() {\r\n  const [position, setPosition] = React.useState(\"bottom\")\r\n\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button variant=\"outline\">Open</Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent className=\"w-56\">\r\n        <DropdownMenuLabel>Panel Position</DropdownMenuLabel>\r\n        <DropdownMenuSeparator />\r\n        <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>\r\n          <DropdownMenuRadioItem value=\"top\">Top</DropdownMenuRadioItem>\r\n          <DropdownMenuRadioItem value=\"bottom\">Bottom</DropdownMenuRadioItem>\r\n          <DropdownMenuRadioItem value=\"right\">Right</DropdownMenuRadioItem>\r\n        </DropdownMenuRadioGroup>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  )\r\n}": [
            "Create a DropdownMenu component using the @radix-ui/react-dropdown-menu library.",
            "Add a DropdownMenuTrigger to the DropdownMenu component that uses a Button component for triggering.",
            "Create a DropdownMenuContent component that contains a DropdownMenuLabel, a DropdownMenuSeparator, and a DropdownMenuRadioGroup.",
            "Implement a state management solution using React's useState hook to handle the selected value of the DropdownMenuRadioGroup."
        ]
    },
    "Hover Card": {
        "import { CalendarDays } from \"lucide-react\"\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/components/ui/avatar\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport {\r\n  HoverCard,\r\n  HoverCardContent,\r\n  HoverCardTrigger,\r\n} from \"@/components/ui/hover-card\"\r\n\r\nexport default function HoverCardDemo() {\r\n  return (\r\n    <HoverCard>\r\n      <HoverCardTrigger asChild>\r\n        <Button variant=\"link\">@nextjs</Button>\r\n      </HoverCardTrigger>\r\n      <HoverCardContent className=\"w-80\">\r\n        <div className=\"flex justify-between space-x-4\">\r\n          <Avatar>\r\n            <AvatarImage src=\"https://github.com/vercel.png\" />\r\n            <AvatarFallback>VC</AvatarFallback>\r\n          </Avatar>\r\n          <div className=\"space-y-1\">\r\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\r\n            <p className=\"text-sm\">\r\n              The React Framework \u2013 created and maintained by @vercel.\r\n            </p>\r\n            <div className=\"flex items-center pt-2\">\r\n              <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                Joined December 2021\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HoverCardContent>\r\n    </HoverCard>\r\n  )\r\n}": [
            "Create a HoverCard component using @shadcn/ui library",
            "Implement Avatar and AvatarFallback components",
            "Integrate the lucide-react library to use the CalendarDays icon",
            "Style the HoverCard component using tailwindcss"
        ]
    },
    "Input": {
        "import { Input } from \"@/components/ui/input\"\r\n\r\nexport default function InputDemo() {\r\n  return <Input type=\"email\" placeholder=\"Email\" />\r\n}": [
            "Create a new component named 'InputDemo' that uses the 'Input' component from the @shadcn/ui library.",
            "Set the type of the 'Input' component to 'email'.",
            "Set the placeholder of the 'Input' component to 'Email'.",
            "Ensure the 'InputDemo' component is exported as the default export."
        ],
        "import { Input } from \"@/components/ui/input\"\r\n\r\nexport default function InputDisabled() {\r\n  return <Input disabled type=\"email\" placeholder=\"Email\" />\r\n}": [
            "Create a new Input component using the @shadcn/ui library.",
            "Set the Input component to be disabled.",
            "Set the type of the Input component to 'email'.",
            "Add a placeholder to the Input component with the value 'Email'."
        ],
        "import { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function InputFile() {\r\n  return (\r\n    <div className=\"grid w-full max-w-sm items-center gap-1.5\">\r\n      <Label htmlFor=\"picture\">Picture</Label>\r\n      <Input id=\"picture\" type=\"file\" />\r\n    </div>\r\n  )\r\n}": [
            "Create a new InputFile component",
            "Import and utilize the Input and Label components from the @shadcn/ui library",
            "Style the InputFile component using Tailwind CSS",
            "Set up the file input functionality for the Input component"
        ],
        "import { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\nexport default function InputWithButton() {\r\n  return (\r\n    <div className=\"flex w-full max-w-sm items-center space-x-2\">\r\n      <Input type=\"email\" placeholder=\"Email\" />\r\n      <Button type=\"submit\">Subscribe</Button>\r\n    </div>\r\n  )\r\n}": [
            "Create a new component called 'InputWithButton' that includes an Input field and a Button.",
            "Set up the layout for the 'InputWithButton' component using Flexbox and Tailwind CSS.",
            "Add an Input field for email input with a placeholder text 'Email'.",
            "Add a Button with the label 'Subscribe' and set its type to 'submit'."
        ],
        "import { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function InputWithLabel() {\r\n  return (\r\n    <div className=\"grid w-full max-w-sm items-center gap-1.5\">\r\n      <Label htmlFor=\"email\">Email</Label>\r\n      <Input type=\"email\" id=\"email\" placeholder=\"Email\" />\r\n    </div>\r\n  )\r\n}": [
            "Create a new component called 'InputWithLabel' which combines the 'Input' and 'Label' components from the @shadcn/ui library.",
            "Use the 'grid' class from Tailwind CSS to create a grid layout for the 'InputWithLabel' component.",
            "Add 'Email' as the label for the input field and set the 'for' attribute of the label to match the 'id' of the input field.",
            "Set the 'type' of the input field to 'email' and add a placeholder text 'Email'."
        ],
        "import { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function InputWithText() {\r\n  return (\r\n    <div className=\"grid w-full max-w-sm items-center gap-1.5\">\r\n      <Label htmlFor=\"email-2\">Email</Label>\r\n      <Input type=\"email\" id=\"email-2\" placeholder=\"Email\" />\r\n      <p className=\"text-sm text-muted-foreground\">Enter your email address.</p>\r\n    </div>\r\n  )\r\n}": [
            "Create a reusable 'Input' component using @shadcn/ui library.",
            "Create a reusable 'Label' component using @shadcn/ui library.",
            "Combine 'Input' and 'Label' components to create a form field for email input.",
            "Style the form field using tailwindcss to match the desired layout and design."
        ]
    },
    "Label": {
        "import { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nexport default function LabelDemo() {\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Checkbox id=\"terms\" />\r\n        <Label htmlFor=\"terms\">Accept terms and conditions</Label>\r\n      </div>\r\n    </div>\r\n  )\r\n}": [
            "Create a new Checkbox component using @shadcn/ui library",
            "Create a new Label component using @shadcn/ui library",
            "Implement a demo function to showcase the usage of Checkbox and Label components",
            "Style the components using tailwindcss for alignment and spacing"
        ]
    },
    "Menubar": {
        "import {\r\n  Menubar,\r\n  MenubarCheckboxItem,\r\n  MenubarContent,\r\n  MenubarItem,\r\n  MenubarMenu,\r\n  MenubarRadioGroup,\r\n  MenubarRadioItem,\r\n  MenubarSeparator,\r\n  MenubarShortcut,\r\n  MenubarSub,\r\n  MenubarSubContent,\r\n  MenubarSubTrigger,\r\n  MenubarTrigger,\r\n} from \"@/components/ui/menubar\"\r\n\r\nexport default function MenubarDemo() {\r\n  return (\r\n    <Menubar>\r\n      <MenubarMenu>\r\n        <MenubarTrigger>File</MenubarTrigger>\r\n        <MenubarContent>\r\n          <MenubarItem>\r\n            New Tab <MenubarShortcut>\u2318T</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarItem>\r\n            New Window <MenubarShortcut>\u2318N</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarItem disabled>New Incognito Window</MenubarItem>\r\n          <MenubarSeparator />\r\n          <MenubarSub>\r\n            <MenubarSubTrigger>Share</MenubarSubTrigger>\r\n            <MenubarSubContent>\r\n              <MenubarItem>Email link</MenubarItem>\r\n              <MenubarItem>Messages</MenubarItem>\r\n              <MenubarItem>Notes</MenubarItem>\r\n            </MenubarSubContent>\r\n          </MenubarSub>\r\n          <MenubarSeparator />\r\n          <MenubarItem>\r\n            Print... <MenubarShortcut>\u2318P</MenubarShortcut>\r\n          </MenubarItem>\r\n        </MenubarContent>\r\n      </MenubarMenu>\r\n      <MenubarMenu>\r\n        <MenubarTrigger>Edit</MenubarTrigger>\r\n        <MenubarContent>\r\n          <MenubarItem>\r\n            Undo <MenubarShortcut>\u2318Z</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarItem>\r\n            Redo <MenubarShortcut>\u21e7\u2318Z</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarSeparator />\r\n          <MenubarSub>\r\n            <MenubarSubTrigger>Find</MenubarSubTrigger>\r\n            <MenubarSubContent>\r\n              <MenubarItem>Search the web</MenubarItem>\r\n              <MenubarSeparator />\r\n              <MenubarItem>Find...</MenubarItem>\r\n              <MenubarItem>Find Next</MenubarItem>\r\n              <MenubarItem>Find Previous</MenubarItem>\r\n            </MenubarSubContent>\r\n          </MenubarSub>\r\n          <MenubarSeparator />\r\n          <MenubarItem>Cut</MenubarItem>\r\n          <MenubarItem>Copy</MenubarItem>\r\n          <MenubarItem>Paste</MenubarItem>\r\n        </MenubarContent>\r\n      </MenubarMenu>\r\n      <MenubarMenu>\r\n        <MenubarTrigger>View</MenubarTrigger>\r\n        <MenubarContent>\r\n          <MenubarCheckboxItem>Always Show Bookmarks Bar</MenubarCheckboxItem>\r\n          <MenubarCheckboxItem checked>\r\n            Always Show Full URLs\r\n          </MenubarCheckboxItem>\r\n          <MenubarSeparator />\r\n          <MenubarItem inset>\r\n            Reload <MenubarShortcut>\u2318R</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarItem disabled inset>\r\n            Force Reload <MenubarShortcut>\u21e7\u2318R</MenubarShortcut>\r\n          </MenubarItem>\r\n          <MenubarSeparator />\r\n          <MenubarItem inset>Toggle Fullscreen</MenubarItem>\r\n          <MenubarSeparator />\r\n          <MenubarItem inset>Hide Sidebar</MenubarItem>\r\n        </MenubarContent>\r\n      </MenubarMenu>\r\n      <MenubarMenu>\r\n        <MenubarTrigger>Profiles</MenubarTrigger>\r\n        <MenubarContent>\r\n          <MenubarRadioGroup value=\"benoit\">\r\n            <MenubarRadioItem value=\"andy\">Andy</MenubarRadioItem>\r\n            <MenubarRadioItem value=\"benoit\">Benoit</MenubarRadioItem>\r\n            <MenubarRadioItem value=\"Luis\">Luis</MenubarRadioItem>\r\n          </MenubarRadioGroup>\r\n          <MenubarSeparator />\r\n          <MenubarItem inset>Edit...</MenubarItem>\r\n          <MenubarSeparator />\r\n          <MenubarItem inset>Add Profile...</MenubarItem>\r\n        </MenubarContent>\r\n      </MenubarMenu>\r\n    </Menubar>\r\n  )\r\n}": [
            "Create a Menubar component using the Menubar components from the @shadcn/ui library",
            "Add MenubarMenu components for 'File', 'Edit', 'View', and 'Profiles'",
            "For each MenubarMenu, add MenubarTrigger, MenubarContent, and MenubarItem components with appropriate labels and shortcuts",
            "In the 'View' MenubarMenu, add MenubarCheckboxItem components for 'Always Show Bookmarks Bar' and 'Always Show Full URLs'",
            "In the 'Profiles' MenubarMenu, add a MenubarRadioGroup with MenubarRadioItem components for different user profiles"
        ]
    },
    "Popover": {
        "import { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\n\r\nexport default function PopoverDemo() {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\">Open popover</Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-80\">\r\n        <div className=\"grid gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Set the dimensions for the layer.\r\n            </p>\r\n          </div>\r\n          <div className=\"grid gap-2\">\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"width\">Width</Label>\r\n              <Input\r\n                id=\"width\"\r\n                defaultValue=\"100%\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n              <Input\r\n                id=\"maxWidth\"\r\n                defaultValue=\"300px\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"height\">Height</Label>\r\n              <Input\r\n                id=\"height\"\r\n                defaultValue=\"25px\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n              <Input\r\n                id=\"maxHeight\"\r\n                defaultValue=\"none\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}": [
            "Create a Popover component using the @shadcn/ui library",
            "Inside the Popover, create a trigger button to open the Popover",
            "Inside the PopoverContent, create a form to input dimensions for a layer",
            "Style the form using tailwindcss"
        ]
    },
    "Progress": {
        "\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { Progress } from \"@/components/ui/progress\"\r\n\r\nexport default function ProgressDemo() {\r\n  const [progress, setProgress] = React.useState(13)\r\n\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => setProgress(66), 500)\r\n    return () => clearTimeout(timer)\r\n  }, [])\r\n\r\n  return <Progress value={progress} className=\"w-[60%]\" />\r\n}": [
            "Create a ProgressDemo component that uses the Progress component from the @shadcn/ui library",
            "Initialize a state variable 'progress' with a default value of 13",
            "Set up a useEffect hook to update the 'progress' state to 66 after a delay of 500ms",
            "Pass the 'progress' state variable as a prop to the Progress component and set its width to 60%"
        ]
    },
    "Radio Group": {
        "import { Label } from \"@/components/ui/label\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"comfortable\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"default\" id=\"r1\" />\r\n        <Label htmlFor=\"r1\">Default</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\r\n        <Label htmlFor=\"r2\">Comfortable</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"compact\" id=\"r3\" />\r\n        <Label htmlFor=\"r3\">Compact</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  )\r\n}": [
            "Implement a RadioGroup component using the @shadcn/ui library",
            "Create a Label component to be used in conjunction with the RadioGroupItem",
            "Style the RadioGroup and Label components using tailwindcss",
            "Set a default value for the RadioGroup component"
        ]
    },
    "Scroll Area": {
        "import * as React from \"react\"\r\n\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\n\r\nconst tags = Array.from({ length: 50 }).map(\r\n  (_, i, a) => `v1.2.0-beta.${a.length - i}`\r\n)\r\n\r\nexport default function ScrollAreaDemo() {\r\n  return (\r\n    <ScrollArea className=\"h-72 w-48 rounded-md border\">\r\n      <div className=\"p-4\">\r\n        <h4 className=\"mb-4 text-sm font-medium leading-none\">Tags</h4>\r\n        {tags.map((tag) => (\r\n          <>\r\n            <div key={tag} className=\"text-sm\">\r\n              {tag}\r\n            </div>\r\n            <Separator className=\"my-2\" />\r\n          </>\r\n        ))}\r\n      </div>\r\n    </ScrollArea>\r\n  )\r\n}": [
            "Create a ScrollArea component using the @shadcn/ui library.",
            "Generate an array of tags for testing the ScrollArea component.",
            "Style the ScrollArea component using tailwindcss.",
            "Implement a Separator component to separate each tag in the ScrollArea."
        ]
    },
    "Select": {
        "import * as React from \"react\"\r\n\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\n\r\nexport default function SelectDemo() {\r\n  return (\r\n    <Select>\r\n      <SelectTrigger className=\"w-[180px]\">\r\n        <SelectValue placeholder=\"Select a fruit\" />\r\n      </SelectTrigger>\r\n      <SelectContent>\r\n        <SelectGroup>\r\n          <SelectLabel>Fruits</SelectLabel>\r\n          <SelectItem value=\"apple\">Apple</SelectItem>\r\n          <SelectItem value=\"banana\">Banana</SelectItem>\r\n          <SelectItem value=\"blueberry\">Blueberry</SelectItem>\r\n          <SelectItem value=\"grapes\">Grapes</SelectItem>\r\n          <SelectItem value=\"pineapple\">Pineapple</SelectItem>\r\n        </SelectGroup>\r\n      </SelectContent>\r\n    </Select>\r\n  )\r\n}": [
            "Create a Select component using the @shadcn/ui library.",
            "Add a SelectTrigger to the Select component with a fixed width.",
            "Add a SelectValue to the SelectTrigger with a placeholder text 'Select a fruit'.",
            "Create a SelectGroup with the label 'Fruits' and add SelectItems for 'Apple', 'Banana', 'Blueberry', 'Grapes', and 'Pineapple'."
        ]
    },
    "Separator": {
        "import { Separator } from \"@/components/ui/separator\"\r\n\r\nexport default function SeparatorDemo() {\r\n  return (\r\n    <div>\r\n      <div className=\"space-y-1\">\r\n        <h4 className=\"text-sm font-medium leading-none\">Radix Primitives</h4>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          An open-source UI component library.\r\n        </p>\r\n      </div>\r\n      <Separator className=\"my-4\" />\r\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Blog</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Docs</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Source</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}": [
            "Create a SeparatorDemo component that uses the Separator component from the @shadcn/ui library.",
            "Style the SeparatorDemo component using tailwindcss classes.",
            "Add the Radix Primitives description and links to Blog, Docs, and Source using the Separator for visual separation.",
            "Ensure the Separator component can handle both horizontal and vertical orientations."
        ]
    },
    "Sheet": {
        "import { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport {\r\n  Sheet,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetFooter,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/sheet\"\r\n\r\nexport default function SheetDemo() {\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button variant=\"outline\">Open</Button>\r\n      </SheetTrigger>\r\n      <SheetContent>\r\n        <SheetHeader>\r\n          <SheetTitle>Edit profile</SheetTitle>\r\n          <SheetDescription>\r\n            Make changes to your profile here. Click save when you're done.\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"name\" className=\"text-right\">\r\n              Name\r\n            </Label>\r\n            <Input id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\r\n          </div>\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"username\" className=\"text-right\">\r\n              Username\r\n            </Label>\r\n            <Input id=\"username\" value=\"@peduarte\" className=\"col-span-3\" />\r\n          </div>\r\n        </div>\r\n        <SheetFooter>\r\n          <SheetClose asChild>\r\n            <Button type=\"submit\">Save changes</Button>\r\n          </SheetClose>\r\n        </SheetFooter>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}": [
            "Create a Sheet component using @shadcn/ui library that pops up when a button is clicked",
            "Inside the Sheet component, create a form for editing a user profile with fields for name and username",
            "Style the form using tailwindcss to have a grid layout with specific gaps and spans",
            "Create a save button that closes the Sheet component when clicked"
        ]
    },
    "Skeleton": {
        "import { Skeleton } from \"@/components/ui/skeleton\"\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-4\">\r\n      <Skeleton className=\"h-12 w-12 rounded-full\" />\r\n      <div className=\"space-y-2\">\r\n        <Skeleton className=\"h-4 w-[250px]\" />\r\n        <Skeleton className=\"h-4 w-[200px]\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}": [
            "Create a new component named 'SkeletonDemo' using NextJS.",
            "Import the 'Skeleton' component from the '@/components/ui/skeleton' directory.",
            "In the 'SkeletonDemo' component, return a 'div' element with the class names 'flex', 'items-center', and 'space-x-4'.",
            "Inside the 'div' element, add three 'Skeleton' components with different class names and styles."
        ]
    },
    "Slider": {
        "import { cn } from \"@/lib/utils\"\r\nimport { Slider } from \"@/components/ui/slider\"\r\n\r\ntype SliderProps = React.ComponentProps<typeof Slider>\r\n\r\nexport default function SliderDemo({ className, ...props }: SliderProps) {\r\n  return (\r\n    <Slider\r\n      defaultValue={[50]}\r\n      max={100}\r\n      step={1}\r\n      className={cn(\"w-[60%]\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}": [
            "Create a SliderDemo component that uses the Slider component from the ui library",
            "Set the default value of the slider to 50",
            "Set the maximum value of the slider to 100",
            "Set the stepping value of the slider to 1",
            "Style the slider with a width of 60% of its parent container"
        ]
    },
    "Switch": {
        "import { Label } from \"@/components/ui/label\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Switch id=\"airplane-mode\" />\r\n      <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>\r\n    </div>\r\n  )\r\n}": [
            "Create a Switch component using @shadcn/ui library",
            "Create a Label component using @shadcn/ui library",
            "Arrange the Switch and Label components using flexbox from tailwindcss",
            "Ensure the Switch and Label components are associated using the 'htmlFor' attribute"
        ]
    },
    "Table": {
        "import {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\"\r\n\r\nconst invoices = [\r\n  {\r\n    invoice: \"INV001\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$250.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV002\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$150.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV003\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$350.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV004\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$450.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV005\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$550.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV006\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$200.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV007\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$300.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n]\r\n\r\nexport default function TableDemo() {\r\n  return (\r\n    <Table>\r\n      <TableCaption>A list of your recent invoices.</TableCaption>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\r\n          <TableHead>Status</TableHead>\r\n          <TableHead>Method</TableHead>\r\n          <TableHead className=\"text-right\">Amount</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {invoices.map((invoice) => (\r\n          <TableRow key={invoice.invoice}>\r\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\r\n            <TableCell>{invoice.paymentStatus}</TableCell>\r\n            <TableCell>{invoice.paymentMethod}</TableCell>\r\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  )\r\n}": [
            "Create a Table component using @shadcn/ui library",
            "Create an array of invoice objects with properties such as invoice number, payment status, total amount, and payment method",
            "Map through the invoices array and display each invoice's details in a row of the Table component",
            "Style the Table component using Tailwind CSS"
        ]
    },
    "Tabs": {
        "import { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"@/components/ui/tabs\"\r\n\r\nexport default function TabsDemo() {\r\n  return (\r\n    <Tabs defaultValue=\"account\" className=\"w-[400px]\">\r\n      <TabsList className=\"grid w-full grid-cols-2\">\r\n        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n      </TabsList>\r\n      <TabsContent value=\"account\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Account</CardTitle>\r\n            <CardDescription>\r\n              Make changes to your account here. Click save when you're done.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"name\">Name</Label>\r\n              <Input id=\"name\" defaultValue=\"Pedro Duarte\" />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"username\">Username</Label>\r\n              <Input id=\"username\" defaultValue=\"@peduarte\" />\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button>Save changes</Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </TabsContent>\r\n      <TabsContent value=\"password\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Password</CardTitle>\r\n            <CardDescription>\r\n              Change your password here. After saving, you'll be logged out.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"current\">Current password</Label>\r\n              <Input id=\"current\" type=\"password\" />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"new\">New password</Label>\r\n              <Input id=\"new\" type=\"password\" />\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button>Save password</Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </TabsContent>\r\n    </Tabs>\r\n  )\r\n}": [
            "Create a Tab component with two tabs: 'Account' and 'Password'.",
            "In the 'Account' tab, create a form with fields for 'Name' and 'Username', and a 'Save changes' button.",
            "In the 'Password' tab, create a form with fields for 'Current password' and 'New password', and a 'Save password' button.",
            "Style the components using Tailwind CSS classes."
        ]
    },
    "Textarea": {
        "import { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function TextareaDemo() {\r\n  return <Textarea placeholder=\"Type your message here.\" />\r\n}": [
            "Create a new component called 'TextareaDemo' that uses the 'Textarea' component from the ui library.",
            "Set the placeholder for the 'Textarea' component to 'Type your message here.'"
        ],
        "import { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function TextareaDisabled() {\r\n  return <Textarea placeholder=\"Type your message here.\" disabled />\r\n}": [
            "Create a Textarea component with disabled property",
            "Implement the Textarea component in the main application",
            "Test the disabled state of the Textarea component",
            "Style the Textarea component using tailwindcss"
        ],
        "import { Button } from \"@/components/ui/button\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function TextareaWithButton() {\r\n  return (\r\n    <div className=\"grid w-full gap-2\">\r\n      <Textarea placeholder=\"Type your message here.\" />\r\n      <Button>Send message</Button>\r\n    </div>\r\n  )\r\n}": [
            "Create a new Textarea component with a placeholder text 'Type your message here.'",
            "Create a new Button component with the label 'Send message'",
            "Arrange the Textarea and Button components in a grid layout with a gap of 2",
            "Ensure the grid layout takes up the full width of its parent container"
        ],
        "import { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function TextareaWithLabel() {\r\n  return (\r\n    <div className=\"grid w-full gap-1.5\">\r\n      <Label htmlFor=\"message\">Your message</Label>\r\n      <Textarea placeholder=\"Type your message here.\" id=\"message\" />\r\n    </div>\r\n  )\r\n}": [
            "Create a new component called 'TextareaWithLabel' using NextJS and @shadcn/ui library.",
            "Within the 'TextareaWithLabel' component, use the 'Label' and 'Textarea' components from the @shadcn/ui library.",
            "Style the 'TextareaWithLabel' component using Tailwind CSS to create a grid layout with a full width and a gap of 1.5.",
            "Add a placeholder text 'Type your message here.' to the 'Textarea' component."
        ],
        "import { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function TextareaWithText() {\r\n  return (\r\n    <div className=\"grid w-full gap-1.5\">\r\n      <Label htmlFor=\"message-2\">Your Message</Label>\r\n      <Textarea placeholder=\"Type your message here.\" id=\"message-2\" />\r\n      <p className=\"text-sm text-muted-foreground\">\r\n        Your message will be copied to the support team.\r\n      </p>\r\n    </div>\r\n  )\r\n}": [
            "Create a new component called TextareaWithText",
            "Import and use the Label and Textarea components from the @shadcn/ui library",
            "Add a placeholder text to the Textarea component",
            "Add a paragraph under the Textarea component to inform the user about the message handling process"
        ]
    },
    "Toast": {
        "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ToastAction } from \"@/components/ui/toast\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport default function ToastDemo() {\r\n  const { toast } = useToast()\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          title: \"Scheduled: Catch up \",\r\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\r\n          action: (\r\n            <ToastAction altText=\"Goto schedule to undo\">Undo</ToastAction>\r\n          ),\r\n        })\r\n      }}\r\n    >\r\n      Add to calendar\r\n    </Button>\r\n  )\r\n}": [
            "Create a button component using the @shadcn/ui library",
            "Implement the useToast hook to display a toast message when the button is clicked",
            "Add a ToastAction to the toast message that allows users to undo the action that triggered the toast",
            "Style the button using tailwindcss"
        ],
        "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ToastAction } from \"@/components/ui/toast\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport default function ToastDestructive() {\r\n  const { toast } = useToast()\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          variant: \"destructive\",\r\n          title: \"Uh oh! Something went wrong.\",\r\n          description: \"There was a problem with your request.\",\r\n          action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\r\n        })\r\n      }}\r\n    >\r\n      Show Toast\r\n    </Button>\r\n  )\r\n}": [
            "Create a button component using the @shadcn/ui library.",
            "Implement a toast notification using the useToast hook from the @shadcn/ui library.",
            "Configure the toast notification to display a 'destructive' variant message.",
            "Add an action to the toast notification that allows users to 'Try again'."
        ],
        "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport default function ToastSimple() {\r\n  const { toast } = useToast()\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          description: \"Your message has been sent.\",\r\n        })\r\n      }}\r\n    >\r\n      Show Toast\r\n    </Button>\r\n  )\r\n}": [
            "Create a button component using the @shadcn/ui library",
            "Implement the useToast hook from the @shadcn/ui library",
            "Configure the button to display a toast message when clicked",
            "Set the toast message to 'Your message has been sent.'"
        ],
        "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ToastAction } from \"@/components/ui/toast\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport default function ToastWithAction() {\r\n  const { toast } = useToast()\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          title: \"Uh oh! Something went wrong.\",\r\n          description: \"There was a problem with your request.\",\r\n          action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\r\n        })\r\n      }}\r\n    >\r\n      Show Toast\r\n    </Button>\r\n  )\r\n}": [
            "Create a 'Button' component using the @shadcn/ui library.",
            "Implement the 'useToast' hook from the @shadcn/ui library to manage toast notifications.",
            "Add a 'ToastAction' component inside the toast notification with the text 'Try again'.",
            "Handle the 'onClick' event for the 'Button' component to show a toast notification with a specific title and description."
        ],
        "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport default function ToastWithTitle() {\r\n  const { toast } = useToast()\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          title: \"Uh oh! Something went wrong.\",\r\n          description: \"There was a problem with your request.\",\r\n        })\r\n      }}\r\n    >\r\n      Show Toast\r\n    </Button>\r\n  )\r\n}": [
            "Create a button component using the @shadcn/ui library",
            "Implement a toast notification system using the useToast hook from the @shadcn/ui library",
            "Configure the button to trigger a toast notification with a title and description on click",
            "Style the button with the 'outline' variant from the @shadcn/ui library"
        ]
    },
    "Toggle": {
        "import { Bold } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <Toggle aria-label=\"Toggle italic\">\r\n      <Bold className=\"h-4 w-4\" />\r\n    </Toggle>\r\n  )\r\n}": [
            "Create a new Toggle component in the /components/ui directory",
            "Import and use the Bold icon from the lucide-react library",
            "Add an aria-label to the Toggle component for accessibility",
            "Style the Bold icon using Tailwind CSS classes"
        ],
        "import { Underline } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleDisabled() {\r\n  return (\r\n    <Toggle aria-label=\"Toggle italic\" disabled>\r\n      <Underline className=\"h-4 w-4\" />\r\n    </Toggle>\r\n  )\r\n}": [
            "Create a Toggle component using @shadcn/ui library",
            "Integrate the 'lucide-react' library for using the 'Underline' icon",
            "Add accessibility features to the Toggle component using 'aria-label'",
            "Implement a disabled state for the Toggle component"
        ],
        "import { Italic } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleLg() {\r\n  return (\r\n    <Toggle size=\"lg\" aria-label=\"Toggle italic\">\r\n      <Italic className=\"h-4 w-4\" />\r\n    </Toggle>\r\n  )\r\n}": [
            "Create a Toggle component in the '/components/ui' directory",
            "Import and use the 'Italic' icon from 'lucide-react' library",
            "Use the 'Toggle' component in a function component named 'ToggleLg'",
            "Set the size of the 'Toggle' component to 'lg' and provide an appropriate 'aria-label'"
        ],
        "import { Italic } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleOutline() {\r\n  return (\r\n    <Toggle variant=\"outline\" aria-label=\"Toggle italic\">\r\n      <Italic className=\"h-4 w-4\" />\r\n    </Toggle>\r\n  )\r\n}": [
            "Import the necessary components from the respective libraries. This includes the 'Italic' component from 'lucide-react' and the 'Toggle' component from the local components directory.",
            "Create a new functional component called 'ToggleOutline'.",
            "In the return statement of the 'ToggleOutline' component, use the 'Toggle' component with the variant set to 'outline' and the aria-label set to 'Toggle italic'.",
            "Inside the 'Toggle' component, use the 'Italic' component with the className set to 'h-4 w-4'."
        ],
        "import { Italic } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleSm() {\r\n  return (\r\n    <Toggle size=\"sm\" aria-label=\"Toggle italic\">\r\n      <Italic className=\"h-4 w-4\" />\r\n    </Toggle>\r\n  )\r\n}": [
            "Create a small toggle component",
            "Integrate lucide-react for icons",
            "Use the Italic icon from lucide-react",
            "Ensure accessibility by adding aria-label to the toggle component"
        ],
        "import { Italic } from \"lucide-react\"\r\n\r\nimport { Toggle } from \"@/components/ui/toggle\"\r\n\r\nexport default function ToggleWithText() {\r\n  return (\r\n    <Toggle aria-label=\"Toggle italic\">\r\n      <Italic className=\"mr-2 h-4 w-4\" />\r\n      Italic\r\n    </Toggle>\r\n  )\r\n}": [
            "Create a toggle component with text using the @shadcn/ui library",
            "Integrate the lucide-react library to use the Italic icon",
            "Style the Italic icon and the text within the Toggle component using tailwindcss",
            "Ensure accessibility of the Toggle component by adding appropriate aria-label"
        ]
    },
    "Tooltip": {
        "import { Button } from \"@/components/ui/button\"\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\"\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>\r\n          <Button variant=\"outline\">Hover</Button>\r\n        </TooltipTrigger>\r\n        <TooltipContent>\r\n          <p>Add to library</p>\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  )\r\n}": [
            "Create a Button component using the @shadcn/ui library",
            "Implement a Tooltip component from the @shadcn/ui library",
            "Add a TooltipProvider to manage tooltip state",
            "Configure the TooltipTrigger to display the tooltip when the button is hovered",
            "Add content to the TooltipContent component"
        ]
    }
}